# Azure Spring Cloud is not yet supported in azurecaf_name
locals {
  spring_cloud_service_name = "asc-${var.application_name}-001"
  spring_cloud_app_name     = "app-${var.application_name}"
  {{#addonCosmosdbMongodb}}
  cosmosdb_association_name = "${var.application_name}-cosmos"
  {{/addonCosmosdbMongodb}}
  {{#addonRedis}}
  redis_association_name    = "${var.application_name}-redis"
  {{/addonRedis}}
  {{#databaseTypeMysql}}
  mysql_association_name    = "${var.application_name}-mysql"
  {{/databaseTypeMysql}}
}

# This creates the plan that the service use
resource "azurerm_spring_cloud_service" "application" {
  name                = local.spring_cloud_service_name
  resource_group_name = var.resource_group
  location            = var.location
  {{#applicationTierBasic}}
  sku_name            = "B0"
  {{/applicationTierBasic}}
  {{#applicationTierStandard}}
  sku_name            = "S0"
  {{/applicationTierStandard}}

  tags = {
    "environment"      = var.environment
    "application-name" = var.application_name
  }
{{#addonApplicationInsights}}
  trace {
    connection_string = var.azure_application_insights_connection_string
  }
{{/addonApplicationInsights}}
}

# This creates the application definition
resource "azurerm_spring_cloud_app" "application" {
  name                = local.spring_cloud_app_name
  resource_group_name = var.resource_group
  service_name        = azurerm_spring_cloud_service.application.name
  identity {
    type = "SystemAssigned"
  }
}

# This creates the application deployment. Terraform provider doesn't support dotnet yet
resource "azurerm_spring_cloud_java_deployment" "application_deployment" {
  name                = "default"
  spring_cloud_app_id = azurerm_spring_cloud_app.application.id
  cpu                 = 1
  instance_count      = 1
  memory_in_gb        = 1
  {{#runtimeJava}}
  runtime_version     = "Java_11"
  environment_variables = {
    "spring.profiles.active" : "prod,azure"
    {{#addonStorageBlob}}

    "AZURE_STORAGE_ACCOUNT_NAME"  : var.azure_storage_account_name
    "AZURE_STORAGE_ACCOUNT_KEY"   : var.azure_storage_account_key
    "AZURE_STORAGE_BLOB_ENDPOINT" : var.azure_storage_blob_endpoint
    {{/addonStorageBlob}}
    {{#databaseTypeSqlServer}}

    "SPRING_DATASOURCE_URL"      : "jdbc:sqlserver://${var.database_url}"
    "SPRING_DATASOURCE_USERNAME" : var.database_username
    "SPRING_DATASOURCE_PASSWORD" : var.database_password
    {{/databaseTypeSqlServer}}
    {{#databaseTypePostgresql}}

    "SPRING_DATASOURCE_URL"      : "jdbc:postgresql://${var.database_url}"
    "SPRING_DATASOURCE_USERNAME" : var.database_username
    "SPRING_DATASOURCE_PASSWORD" : var.database_password
    {{/databaseTypePostgresql}}
  }
  {{/runtimeJava}}
}
{{#addonKeyVault}}

data "azurerm_client_config" "current" {}

resource "azurerm_key_vault_access_policy" "application" {
  key_vault_id = var.vault_id
  tenant_id    = data.azurerm_client_config.current.tenant_id
  object_id    = azurerm_spring_cloud_app.application.identity[0].principal_id

  secret_permissions = [
    "Get",
    "List"
  ]
}
{{/addonKeyVault}}
{{#addonCosmosdbMongodb}}

resource "azurerm_spring_cloud_app_cosmosdb_association" "cosmos_app_association" {
  name                         = local.cosmosdb_association_name
  spring_cloud_app_id          = azurerm_spring_cloud_app.application.id
  cosmosdb_account_id          = var.azure_cosmosdb_account_id
  api_type                     = "mongo"
  cosmosdb_access_key          = var.azure_cosmosdb_mongodb_key
  cosmosdb_mongo_database_name = var.azure_cosmosdb_mongodb_database
}
{{/addonCosmosdbMongodb}}
{{#addonRedis}}

resource "azurerm_spring_cloud_app_redis_association" "redis_app_association" {
  name                = local.redis_association_name
  spring_cloud_app_id = azurerm_spring_cloud_app.application.id
  redis_cache_id      = var.azure_redis_id
  ssl_enabled         = "true"
  redis_access_key    = var.azure_redis_password
}
{{/addonRedis}}
{{#databaseTypeMysql}}

resource "azurerm_spring_cloud_app_mysql_association" "mysql_app_association" {
  name                = local.mysql_association_name
  spring_cloud_app_id = azurerm_spring_cloud_app.application.id
  mysql_server_id     = var.azure_database_id
  database_name       = var.azure_database_name
  username            = var.database_username
  password            = var.database_password
}
{{/databaseTypeMysql}}
